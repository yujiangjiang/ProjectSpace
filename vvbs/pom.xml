<project xmlns="http://maven.apache.org/POM/4.0.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.hikvision</groupId>
    <artifactId>vvbs</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>vvbs</name>
    <description>sshe</description>
  
    <!-- ==========================指定Maven仓库======================== -->  
    <!-- <repositories>  
        <repository>  
            <id>maven</id>  
            <name>Maven Repository Switchboard</name>  
            <layout>default</layout>  
            <url>http://repo1.maven.org/maven2</url>  
            <snapshots>  
                <enabled>false</enabled>  
            </snapshots>  
        </repository>  
        <repository>  
            <id>alibaba-opensource</id>  
            <name>alibaba-opensource</name>  
            <url>http://code.alibabatech.com/mvn/releases/</url>  
            <layout>default</layout>  
        </repository>  
        <repository>  
            <id>alibaba-opensource-snapshot</id>  
            <name>alibaba-opensource-snapshot</name>  
            <url>http://code.alibabatech.com/mvn/snapshots/</url>  
            <layout>default</layout>  
        </repository>  
    </repositories> -->
        
    <properties>  
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java-version>1.8</java-version>
        <spring.version>4.2.5.RELEASE</spring.version>
        <struts2.version>2.3.24.1</struts2.version>
        <hibernate.version>4.3.6.Final</hibernate.version>  
    </properties>
    
    <dependencies>
        <!-- 必须要，否则jsp中会找不到HttpServlet错误 -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>  
        <!-- ======================struts2============================ -->  
        <dependency>  
            <groupId>org.apache.struts</groupId>  
            <artifactId>struts2-core</artifactId>  
            <version>${struts2.version}</version>  
        </dependency>
	    <!-- struts2整合spring -->   
	    <dependency> 
	    	<groupId>org.apache.struts</groupId>  
	        <artifactId>struts2-spring-plugin</artifactId>  
	        <version>${struts2.version}</version>  
	    </dependency>
	    <!--约定优于配置的插件  -->  
	    <dependency>  
	    	<groupId>org.apache.struts</groupId>  
	        <artifactId>struts2-convention-plugin</artifactId>  
	        <version>${struts2.version}</version>  
	    </dependency>
	
	    <!-- ===========================spring3========================== -->  
	    <dependency>  
	    	<groupId>org.springframework</groupId>  
	        <artifactId>spring-core</artifactId>  
	        <version>${spring.version}</version>  
	    </dependency>  
		<dependency>  
	    	<groupId>org.springframework</groupId>  
	        <artifactId>spring-context</artifactId>  
	        <version>${spring.version}</version>  
	    </dependency>  
	    <dependency>  
	    	<groupId>org.springframework</groupId>  
	        <artifactId>spring-jdbc</artifactId>  
	        <version>${spring.version}</version>  
	    </dependency>  
	    <dependency>  
	    	<groupId>org.springframework</groupId>  
	        <artifactId>spring-beans</artifactId>  
	        <version>${spring.version}</version>  
	    </dependency>  
	    <dependency>  
	    	<groupId>org.springframework</groupId>  
	        <artifactId>spring-web</artifactId>  
	        <version>${spring.version}</version>  
	    </dependency>  
	    <dependency>  
	        <groupId>org.springframework</groupId>  
	        <artifactId>spring-expression</artifactId>  
	        <version>${spring.version}</version>  
	    </dependency>  
	    <dependency>  
	        <groupId>org.springframework</groupId>  
	        <artifactId>spring-orm</artifactId>  
	        <version>${spring.version}</version>  
	    </dependency>  
	    <!-- ========================Junit======================= -->  
	    <dependency>  
	        <groupId>junit</groupId>  
	        <artifactId>junit</artifactId>  
	        <version>4.11-beta-1</version>  
	        <scope>test</scope>  
	    </dependency>  
	          
	    <!-- =====================log4j============================ -->  
	    <dependency>  
	        <groupId>log4j</groupId>
	        <artifactId>log4j</artifactId>  
	        <version>1.2.17</version>  
	    </dependency>  
	                    
	    <!-- ======================mysql============================-->   
	    <dependency>  
	        <groupId>mysql</groupId>  
	        <artifactId>mysql-connector-java</artifactId>  
	        <version>5.1.32</version>  
	    </dependency>  
	           
	    <!-- Spring中进行aop操作除了导入基本的jar包，还需要导入aop相关jar包,其中就需要一个aspectj框架支持的包 -->     
	    <dependency>  
	        <groupId>org.aspectj</groupId>  
	        <artifactId>aspectjweaver</artifactId>  
	        <version>1.8.2</version>  
	    </dependency>
	    
	    <!-- hibernate4 -->  
	    <dependency>  
	    	<groupId>org.hibernate</groupId>  
	        <artifactId>hibernate-core</artifactId>  
	        <version>${hibernate.version}</version>  
	    </dependency>
	    
	    <!-- Json -->
	    <dependency>
		    <groupId>com.alibaba</groupId>
		    <artifactId>fastjson</artifactId>
		    <version>1.2.4</version>
		</dependency>
	    
        <dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>2.9.2</version>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-core</artifactId>
		    <version>2.9.2</version>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-annotations</artifactId>
		    <version>2.9.2</version>
		</dependency>
        
	    
	    <!-- ============poi ================-->
	    <dependency>
		   <groupId>org.apache.poi</groupId>
		   <artifactId>poi</artifactId>
		   <version>3.17</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi-ooxml</artifactId>
		    <version>3.17</version>
		</dependency> 
	</dependencies>
  
  
    <build>
	    <pluginManagement>
	        <plugins>  
                <plugin>  
                    <artifactId>maven-compiler-plugin</artifactId>  
                    <version>2.3.2</version>  
                    <configuration>
                        <source>${java-version}</source>
                        <target>${java-version}</target>
                        <!-- true:跳过测试 -->
                        <skip>true</skip>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
                
                <!-- 设置多个源文件夹 -->  
                <plugin>  
                    <artifactId>maven-war-plugin</artifactId>  
                    <version>2.2</version>  
                    <configuration>  
                        <version>3.0</version>  
                        <failOnMissingWebXml>false</failOnMissingWebXml>  
                    </configuration>  
                </plugin>
          
          
                <plugin>  
                    <groupId>org.codehaus.mojo</groupId>  
                    <artifactId>build-helper-maven-plugin</artifactId>  
                    <version>1.8</version>  
                    <executions>  
			        <!-- 添加主资源文件目录 -->  
			        <execution>  
			            <!-- 自定义名称,不可重复  --> 
			            <id>add-resource</id>  
			            <!-- 指定绑定到生命周期  --> 
			            <phase>initialize</phase>  
			            <!-- 指定指定的目标,可添加多个 -->  
			            <goals>  
			                <goal>add-resource</goal>  
			            </goals>  
			            <configuration>  
			                <resources>  
			                    <!-- 资源文件目录,可添加多个   -->
			                    <resource>  
			                        <directory>${basedir}/src/main/one</directory>  
			                        <!-- 是否启用变量过滤  --> 
			                        <filtering>true</filtering>  
			                     <!--    排除的文件,可添加多个   -->
			                        <excludes>  
			                            <exclude>**/*.java</exclude>  
			                        </excludes>  
			                    </resource>  
			                    <resource>  
			                        <directory>${basedir}/src/main/two</directory>  
			                        <filtering>true</filtering>  
			                        <excludes>  
			                            <exclude>**/*.java</exclude>  
			                        </excludes>  
			                    </resource>  
			                </resources>  
			            </configuration>  
			        </execution>  
			  
			        <!-- 添加主源码目录 -->  
			        <execution>  
			            <id>add-source</id>  
			            <phase>initialize</phase>  
			            <goals>  
			                <goal>add-source</goal>  
			            </goals>  
			            <configuration>  
			                <sources>  
			                    <source>${basedir}/src/main/common</source>  
			                    <source>${basedir}/src/main/user</source>  
			                </sources>  
			            </configuration>  
			        </execution>  
			  
			        <!-- 添加测试源码目录 -->  
			        <execution>  
			            <id>add-test-source</id>  
			            <phase>initialize</phase>  
			            <goals>  
			                <goal>add-test-source</goal>  
			            </goals>  
			            <configuration>  
			                <sources>  
			                    <source>${basedir}/src/main/test1</source>  
			                    <source>${basedir}/src/main/test2</source>  
			                </sources>  
			            </configuration>  
			        </execution>  
			    </executions>  
			</plugin>   
    </plugins>
	    </pluginManagement>
          
    </build>   

</project>